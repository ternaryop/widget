if (!project.rootProject.file('local.properties').exists()) {
    println "Not applying bintrayconfig.gradle"
    return
}
apply plugin: 'com.novoda.bintray-release'

def getBintrayUserAndKey() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return [
            properties.getProperty("bintray.user"),
            properties.getProperty("bintray.apikey")
    ]
}

if (publishPackage == null || publishPackage.version == null) {
    throw new IllegalStateException("Unable to reference publishPackage.version")
}

task checkBintrayConfig {
    doLast {
        def (user, key) = getBintrayUserAndKey()
        if (user == null || user.isEmpty() ||
                key == null || key.isEmpty()) {
            throw new IllegalStateException("Must specify Bintray user/API key in your local.properties.")
        }
    }
}

afterEvaluate {
    bintrayUpload.dependsOn checkBintrayConfig
}

def (user, key) = getBintrayUserAndKey()
publish {
    bintrayUser = user
    bintrayKey = key
    repoName = publishPackage.bintrayRepoName
    userOrg = bintrayUser
    groupId = publishPackage.groupId
    artifactId = publishPackage.artifactId
    publishVersion = publishPackage.version
    desc = publishPackage.desc
    website = publishPackage.website
    dryRun = false
}